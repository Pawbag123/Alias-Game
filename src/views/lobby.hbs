<!DOCTYPE html>
<html lang="en">

<head>
  <meta charset="UTF-8">
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  <script src='/socket.io/socket.io.js'></script>
  <title>Lobby</title>
  <!-- Bootstrap CSS CDN -->
  <link href="https://stackpath.bootstrapcdn.com/bootstrap/4.5.2/css/bootstrap.min.css" rel="stylesheet">
  <style>
    .btn-primary {
      font-size: 1rem;
    }

    .logo {
      top: 20px;
      left: 20px;
      width: 80px;
      height: 80px;
    }

    .custom-navbar {
      background-color: #2e2e2e;
      padding: 1.5rem;
      height: 100px;
    }

    .container h1, .container h2, .container button {
      margin-top: 15px;
    }

    .hidden {
      display: none !important;
    }

    .card {
      box-shadow: 5px 5px 15px rgba(0, 0, 0, 0.2);
      border-radius: 10px;
      margin: 15px 0;
    }

    .btn-success {
      width: 80%;
      margin-top: 10px;
      margin-bottom: 10px;
    }

    #loading-page{
      position: fixed;
      top: 0;
      left: 0;
      width: 100%;
      height: 100%;
      background-color:
      rgba(255, 255, 255, 0.8);
      z-index: 2000;
    }
  </style>
</head>

<body class="bg-light">
    <!-- Navbar -->
  <nav class="navbar navbar-expand-lg custom-navbar">
    <div class="container-fluid">
      <img src="https://alias.eu/wp-content/uploads/2020/07/alias-logo-1.png" alt="Alias Logo" class="logo">
      <div class="ms-auto">
        <button id="profileBtn" class="btn btn-light me-2" onclick="fetchUserStats()"
          data-target="#profileModal">Profile</button>
        <button id="logoutBtn" class="btn btn-light">Log out</button>
      </div>
    </div>
  </nav>

  <div id="loading-page" class="d-flex justify-content-center align-items-center">
    <div class="text-center">
      <div class="spinner-border text-primary" role="status">
        <span class="sr-only">Loading...</span>
      </div>
      <h2 class="mt-3">Loading...</h2>
    </div>
  </div>


  <!-- Profile Modal -->
  <div class="modal fade" id="profileModal" tabindex="-1" role="dialog" aria-labelledby="profileModalLabel"
    aria-hidden="true">
    <div class="modal-dialog" role="document">
      <div class="modal-content">
        <div class="modal-header bg-dark text-white">
          <h5 class="modal-title" id="profileModalLabel">Profile</h5>
          <button type="button" class="close text-white" data-dismiss="modal" aria-label="Close">
            <span aria-hidden="true">&times;</span>
          </button>
        </div>
        <div class="modal-body">
          <p><strong>User Name:</strong> <span id="userName"></span></p>
          <p><strong>Games Played:</strong> <span id="gamesPlayed"></span></p>
          <p><strong>Won:</strong> <span id="wins"></span></p>
          <p><strong>Lose:</strong> <span id="loses"></span></p>
          <p><strong>Draws:</strong> <span id="draw"></span></p>
          <p><strong>Words Guessed:</strong> <span id="wordsGuessed"></span></p>
          <p><strong>Words Well Described:</strong> <span id="wellDescribed"></span></p>
        </div>
        <div class="modal-footer">
          <button type="button" class="btn btn-secondary" data-dismiss="modal">Close</button>
        </div>
      </div>
    </div>
  </div>

  <!-- Settings Modal -->
  <div class="modal fade" id="settingsModal" tabindex="-1" role="dialog" aria-labelledby="settingsModalLabel"
    aria-hidden="true">
    <div class="modal-dialog" style="max-width: 250px;" role="document">
      <div class="modal-content">
        <div class="modal-header bg-dark text-white">
          <h5 class="modal-title" id="settingsModalLabel">Game Settings</h5>
          <button type="button" class="close text-white" data-dismiss="modal" aria-label="Close">
            <span aria-hidden="true">&times;</span>
          </button>
        </div>
        <div class="modal-body">
          <div class="form-group text-center">
            <p><strong>Game Name:</strong></p>
            <input id="gameName" type="text" class="form-control mt-0 mb-2 w-100" placeholder="Enter game name"
              style="max-width: 200px; margin: 0 auto; text-align: center;">
          </div>

          <div class="form-group text-center">
            <p><strong>Max players:</strong></p>
            <select id="maxPlayers" class="form-select mt-0 mb-2 w-100"
              style="max-width: 50px; margin: 0 auto; text-align: center;">
              <option value="4">4</option>
              <option value="6">6</option>
              <option value="8">8</option>
            </select>
          </div>

          <div class="form-group text-center">
            <p><strong>Rounds:</strong></p>
            <select id="rounds" class="form-select mt-0 mb-2 w-100"
              style="max-width: 50px; margin: 0 auto; text-align: center;">
              <option value="2">2</option>
              <option value="4">4</option>
              <option value="5">5</option>
              <option value="6">6</option>
              <option value="7">7</option>
              <option value="8">8</option>
              <option value="9">9</option>
              <option value="10">10</option>
            </select>
          </div>

          <div class="form-group text-center">
            <p><strong>Time:</strong></p>
            <select id="time" class="form-select mt-0 mb-2 w-100"
              style="max-width: 50px; margin: 0 auto; text-align: center;">
              <option value="10">10</option>
              <option value="30">30</option>
              <option value="45">45</option>
              <option value="60">60</option>
              <option value="75">75</option>
              <option value="90">90</option>
              <option value="105">105</option>
              <option value="120">120</option>
            </select>
          </div>
        </div>
        <div class="modal-footer d-flex justify-content-center">
          <button id="sendSettings" class="btn btn-primary mx-2">Start</button>
          <button type="button" class="btn btn-secondary mx-2" data-dismiss="modal">Close</button>
        </div>
      </div>
    </div>
  </div>



  <!-- Error Modal -->
  <div class="modal fade" id="errorModal" tabindex="-1" role="dialog" aria-labelledby="errorModalLabel"
    aria-hidden="true">
    <div class="modal-dialog" role="document">
      <div class="modal-content">
        <div class="modal-header">
          <h5 class="modal-title" id="errorModalLabel">Error</h5>
          <button type="button" class="close" data-dismiss="modal" aria-label="Close">
            <span aria-hidden="true">&times;</span>
          </button>
        </div>
        <div class="modal-body" id="errorModalBody" style="color: red;">
          <!-- Error message will be rendered here -->
        </div>
        <div class="modal-footer">
          <button type="button" class="btn btn-secondary" data-dismiss="modal">Close</button>
        </div>
      </div>
    </div>
  </div>

  <div id="error-message" style="display: none; color: #dc3545; text-align: center; font-size: 1.2rem; margin-top: 300px;"></div>

  <div class="container mt-5">
    <h1 class="text-center mb-4">Game Lobby</h1>
    <div class="text-center mb-4">
      <button id="createGameBtn" class="btn btn-primary btn-lg">Create new room</button>
    </div>

    <div id="available-games" class="mt-4">
      <h2 class="text-center mb-4" id="available-games-title"></h2>
      <div id="game-list" class="row">
        <!-- Cards will be rendered here -->
      </div>
    </div>
  </div>

  <!-- Bootstrap and JavaScript dependencies -->
  <script src="https://code.jquery.com/jquery-3.5.1.slim.min.js"></script>
  <script src="https://cdn.jsdelivr.net/npm/bootstrap@4.5.2/dist/js/bootstrap.bundle.min.js"></script>
  <link rel="stylesheet" href="https://stackpath.bootstrapcdn.com/bootstrap/4.5.2/css/bootstrap.min.css">


  <script>
    let socket;

    function showLoading() {
      document.getElementById('loading-page').style.cssText = 'display: flex !important;'; // Show loading
    }

    function hideLoading() {
      console.log('hideLoading function called');
      const loadingPage = document.getElementById('loading-page');
      if (loadingPage) {
        //loadingPage.classList.add('hidden');
        loadingPage.style.cssText = 'display: none !important;';
      } else {
        console.error('Element with ID "loading-page" not found');
      }
    }

    function hideContent() {
      const container = document.querySelector('.container');
      const navbar = document.querySelector('.custom-navbar');
      if (container) {
      container.style.display = 'none';
      }
      if (navbar) {
      navbar.style.display = 'none';
      }
    }

    function showContent() {
      const container = document.querySelector('.container');
      if (container) {
      container.style.display = 'block';
      }
    }

    window.onload = function () {
      const { userId, userName } = getUserInfo();
      //hideLoading();
      showLoading();
      //hideContent();
      const accessToken = localStorage.getItem('accessToken');


      if (!socket) {
        socket = io('/lobby', {
          auth: { token: accessToken }
        });
      }

      document.getElementById('logoutBtn').addEventListener('click', (e) => {
        e.preventDefault();
        localStorage.clear();
        window.location.href = '/login';
      });

      document.getElementById('createGameBtn').addEventListener('click', (e) => {
        e.preventDefault();
        const settingsModal = new bootstrap.Modal(document.getElementById('settingsModal'))
        settingsModal.show();
      });

      //! LUEGO REEMPLAZAR POR CREATE
      document.getElementById('sendSettings').addEventListener('click', (e) => {
        e.preventDefault();

        // Get the values from the select elements
        const gameName = document.getElementById('gameName').value;
        const maxPlayers = document.getElementById('maxPlayers').value;
        const rounds = document.getElementById('rounds').value;
        const time = document.getElementById('time').value;

        socket.emit('game:create', {
          gameName: gameName,
          maxPlayers: parseInt(maxPlayers),
          rounds: parseInt(rounds),
          time: parseInt(time),

        });
      });

      socket.on('connect_error', (error) => {
        //check that
        console.error('Connection error:');
        console.error(error.message);
        hideLoading();
        //showNavbar();
        renderError(error.message);
      });

      socket.on('connect', () => {
        hideLoading();
        //showContent();
        //showNavbar();
        console.log(`Connected as ${userName} (ID: ${userId})`);

        socket.on('games:updated', (games) => {
          console.log('Games updated:', games);
          renderLobby(games);
        });

        socket.on('game:joined', (gameId) => {
          console.log('Joined game:', gameId);
          redirectToGame(gameId);
        });

        socket.on('game:created', (gameId) => {
          console.log('Created game:', gameId);
          redirectToGame(gameId);
        });

        socket.on('user-stats', (userInfo) => {
          console.log('User stats:', userInfo);
          showUserStats(userInfo);
        });

        socket.on('exception', (error) => {
          error = error.error || error;
          console.error('Server exception:', error.message);
          console.error(error);
          renderErrorMessage(error.message);
        });
      });
    };

    function getUserInfo() {
      const userId = localStorage.getItem('userId');
      const userName = localStorage.getItem('userName');
      return { userId, userName };
    }

    function renderError(errMessage) {
      document.getElementById('profileBtn').style.display = 'none';
      const [type,message] = errMessage.split(':');
      const logoutBtn = document.getElementById('logoutBtn');
      switch (type) {
        case 'Unauthorized':
          logoutBtn.innerHTML = 'Go to login';
          logoutBtn.style.display = 'block';
          break;
        case 'Conflict':
        default:
          break;
      }
      const errorDiv = document.getElementById('error-message');
      const container = document.getElementsByClassName('container mt-5')[ 0 ];
      container.style.display = 'none';
      errorDiv.innerHTML = `Error: ${message}`;
      errorDiv.style.display = 'block';
    }

    function renderErrorMessage(message) {
      const errorModalBody = document.getElementById('errorModalBody');
      errorModalBody.innerHTML = `${message}`;
      $('#errorModal').modal('show');
    }

    function renderLobby(games) {
      const gameList = document.getElementById('game-list');
      const availableGamesTitle = document.getElementById('available-games-title')
      gameList.innerHTML = ''; // Clear the list

      if (games.length > 0) {
        availableGamesTitle.innerHTML = 'Available Games'
        games.forEach(game => {
          const div = document.createElement('div');
          div.classList.add('col-md-4', 'mb-4'); // 3 cards per row

          div.innerHTML = `
            <div class="card h-100 shadow-sm">
              <div class="card-body d-flex flex-column justify-content-between">
                <h5 class="card-title text-center">${game.name}</h5>
                <p class="card-text text-center">Players: ${game.players}/${game.maxPlayers}</p>
                <div class="d-grid">
                  <button 
                    class="btn btn-success btn-block"
                    ${game.started || game.players >= game.maxPlayers ? 'disabled' : ''} 
                    onclick="joinGame('${game.id}')">
                    Join
                  </button>
                </div>
              </div>
            </div>
          `;

          gameList.appendChild(div);
        });
      } else {
        availableGamesTitle.innerHTML = 'No Rooms Created'
      }
    }

    function fetchUserStats() {
      console.log('Fetching user stats');
      socket.emit('user-stats:get');
    }

    function showUserStats(userInfo) {
      $('#userName').text(userInfo.userName);
      $('#gamesPlayed').text(userInfo.gamesPlayed);
      $('#wins').text(userInfo.wins);
      $('#loses').text(userInfo.loses);
      $('#draw').text(userInfo.draw);
      $('#wordsGuessed').text(userInfo.wordsGuessed);
      $('#wellDescribed').text(userInfo.wellDescribed);

      // Show the modal
      $('#profileModal').modal('show');
    }

    function joinGame(gameId) {
      console.log('Joining game with id:', gameId);
      socket.emit('game:join', { gameId });
    }

    function redirectToGame(gameId) {
      window.location.href = `/game/${gameId}`;
    }
  </script>
</body>

</html>