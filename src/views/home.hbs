<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="UTF-8">
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  <title>Alias Game</title>
  <!-- Bootstrap CSS -->
  <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/css/bootstrap.min.css" rel="stylesheet">
  <style>
    .logo {
      top: 20px;
      left: 20px;
      width: 80px;
      height: 80px;
    }

    .custom-navbar {
      background-color: #2e2e2e;
      padding: 1.5rem;
    }

    /* Fade-in effect */
    .fade-in {
      opacity: 0;
      transition: opacity 2s ease-in-out;
    }

    .fade-in.visible {
      opacity: 1;
    }
  </style>
</head>
<body>
  <nav class="navbar navbar-expand-lg custom-navbar">
    <div class="container-fluid">
      <img src="https://alias.eu/wp-content/uploads/2020/07/alias-logo-1.png" alt="Alias Logo" class="logo">
    </div>
  </nav>

  <div id="mainContent" class="text-center d-flex flex-column justify-content-center align-items-center mt-5 fade-in">
    <h1 class="mb-4">Alias Game</h1>
    <h2 class="mb-5" id="welcomeMessage">Loading...</h2>

    <div id="buttonContainer">
    <!-- Buttons will be dynamically added here -->
    </div>

  </div>

  <!-- Bootstrap JS and dependencies (Optional, if needed) -->
  <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/js/bootstrap.bundle.min.js"></script>

  <script>

    const getDataFromUrl = () => {
      const urlParams = new URLSearchParams(window.location.search);
      console.log(urlParams);
      const token = urlParams.get('token');
      const userId = urlParams.get('userId');
      const userName = urlParams.get('userName');
      console.log('token:', token);
      console.log('id:', userId);
      console.log('name:', userName);
      if (token && userId && userName)
      {
        localStorage.setItem('accessToken', token);
        localStorage.setItem('userId', userId);
        localStorage.setItem('userName', userName);
      }
    }
    
    // Function to verify the token
    async function verifyToken() {
      const accessToken = localStorage.getItem('accessToken');

      if (accessToken) {
        try {
          const response = await fetch('/auth/verify-token', {
            method: 'GET',
            headers: { 'Authorization': `Bearer ${accessToken}` }
          });

          if (response.ok) {
            return true; // Token is valid
          } else {
            localStorage.removeItem('accessToken'); // Remove token if invalid
            localStorage.removeItem('refreshToken');
          }
        } catch (error) {
          console.error('Error verifying token:', error);
          localStorage.removeItem('accessToken');
          localStorage.removeItem('refreshToken');
          localStorage.removeItem('userName');
          localStorage.removeItem('userId');
        }
      }
      return false;
    }

    // Main logic to update UI based on token validity
    async function initializePage() {
      getDataFromUrl();
      const isTokenValid = await verifyToken();

      const welcomeMessage = document.getElementById('welcomeMessage');
      const buttonContainer = document.getElementById('buttonContainer');
      buttonContainer.innerHTML = ''; // Clear any existing buttons

      if (isTokenValid) {
        welcomeMessage.textContent = 'Welcome!';
        // Add "Go to Lobby" button if token is valid
        const lobbyButton = document.createElement('a');

        const paragraph = document.createElement('p');
        paragraph.innerHTML = 'You will be redirected in a few seconds';
        buttonContainer.appendChild(paragraph);

        setTimeout(() => {
            window.location.href = '/lobby'
        }, 2000);

      } else {
        welcomeMessage.textContent = 'Welcome!';
        // Add "Login" and "Register" buttons if no valid token is found
        const loginButton = document.createElement('a');
        loginButton.href = '/login';
        loginButton.className = 'btn btn-primary btn-lg mb-3 d-block'; // Add d-block for proper alignment
        loginButton.textContent = 'Login';
        buttonContainer.appendChild(loginButton);

        const registerButton = document.createElement('a');
        registerButton.href = '/register';
        registerButton.className = 'btn btn-secondary btn-lg d-block'; // Add d-block for proper alignment
        registerButton.textContent = 'Register';
        buttonContainer.appendChild(registerButton);
      }

      // Add 'visible' class to fade in the content
      const mainContent = document.getElementById('mainContent');
      mainContent.classList.add('visible');
    }

    // Call the initializePage function when the page loads
    window.onload = initializePage;
  </script>
</body>
</html>
